# GitHub Actions Workflow f√ºr CI/CD
name: deploy-to-k8s

on:
  push:
    branches: [ main, deployment-dev ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  TEAM_NUMBER: 7

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test & Quality Checks
    steps:
    - name: Checkout repo
      uses: actions/checkout@v5

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-m2-

    - name: Run tests
      run: mvn clean test

    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Maven Tests
        path: target/surefire-reports/*.xml
        reporter: java-junit

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: target/surefire-reports/


  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    name: Build & Push Docker Image
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5

      - name: Build and publish image
        uses: Agile-Software-Engineering-25/build-and-publish-image@v1
        with:
          push: ${{ github.event_name != 'pull_request' }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    name: Deploy to K8s
    steps:
      - name: Deploy to Namespace
        uses: Agile-Software-Engineering-25/deploy-to-k8s@v1
        with:
          kubeconfig: ${{ secrets.KUBECONFIG }}
          namespace: ${{ secrets.NAMESPACE }}
