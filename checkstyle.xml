<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">

<module name="Checker">
    <!-- Define the charset -->
    <property name="charset" value="UTF-8"/>

    <!-- === TreeWalker module processes Java source code === -->
    <module name="TreeWalker">

        <module name="UnusedLocalVariable">
            <property name="allowUnnamedVariables" value="false"/>
        </module>
        <!-- Naming Conventions -->

        <!-- Classes and Interfaces: PascalCase, noun phrases -->
        <module name="TypeName">
            <property name="format" value="^[A-Z][a-zA-Z0-9]*$"/>
            <property name="applyToPublic" value="true"/>
            <property name="applyToProtected" value="true"/>
            <property name="applyToPackage" value="true"/>
            <property name="applyToPrivate" value="true"/>
        </module>

        <!-- Methods: camelCase, verb phrases -->
        <module name="MethodName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
            <property name="applyToPublic" value="true"/>
            <property name="applyToProtected" value="true"/>
            <property name="applyToPackage" value="true"/>
            <property name="applyToPrivate" value="true"/>
        </module>

        <!-- Variables: camelCase, descriptive -->
        <module name="LocalVariableName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
        </module>

        <module name="MemberName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
        </module>

        <!-- Constants: ALL_CAPS with underscores -->
        <module name="ConstantName">
            <property name="format" value="^[A-Z][A-Z0-9_]*$"/>
        </module>

        <!-- Type parameters (generics): Single uppercase letter -->
        <module name="ClassTypeParameterName">
            <property name="format" value="^[A-Z]$"/>
        </module>
        <module name="MethodTypeParameterName">
            <property name="format" value="^[A-Z]$"/>
        </module>
        <module name="InterfaceTypeParameterName">
            <property name="format" value="^[A-Z]$"/>
        </module>

        <!-- Packages: lowercase, dot separated, company/project prefix is conventionally enforced by structure -->

        <module name="PackageName">
            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
        </module>

        <!-- Formatting -->

        <!-- Indentation: 2 spaces, no tabs -->
        <module name="Indentation">
            <property name="basicOffset" value="2"/>
            <property name="braceAdjustment" value="0"/>
            <property name="caseIndent" value="2"/>
            <property name="lineWrappingIndentation" value="4"/>
            <property name="tabWidth" value="2"/>
            <property name="forceStrictCondition" value="true"/>
        </module>


        <!-- Braces: open brace on same line, close brace alone on its own line -->
        <module name="LeftCurly">
            <property name="option" value="eol"/>
        </module>

        <module name="RightCurly">
            <property name="option" value="alone"/>
        </module>

        <!-- Spacing -->

        <!-- No space before opening parenthesis in method calls -->
        <module name="MethodParamPad">
            <property name="option" value="nospace"/>
        </module>

        <!-- Spaces after commas and certain keywords -->
        <module name="WhitespaceAfter">
            <property name="tokens"
                      value="COMMA, LITERAL_IF, LITERAL_FOR, LITERAL_WHILE, LITERAL_SWITCH, LITERAL_CATCH"/>
        </module>

        <!-- Spaces around operators / wrapping -->
        <module name="OperatorWrap"/>

        <!-- Spaces inside parentheses: disabled for this Checkstyle version -->

        <!-- Comments -->

        <!-- Avoid too many comments - no direct support but encourage self-documenting code -->

        <!-- Declarations -->

        <!-- One statement per line (closest equivalent) -->
        <module name="OneStatementPerLine"/>

        <!-- Statements -->

        <!-- Require braces on all control statements -->
        <module name="NeedBraces">
            <property name="tokens" value="LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO"/>
        </module>

        <!-- Switch statements must have break, return or comment fall-through -->
        <module name="FallThrough">
        </module>

        <!-- Import Ordering -->
        <module name="ImportOrder">
            <property name="groups" value="java, javax, org, com"/>
            <property name="option" value="top"/>
            <property name="sortStaticImportsAlphabetically" value="true"/>
        </module>

        <!-- Unused imports -->
        <module name="UnusedImports"/>

        <!-- Magic Numbers -->
        <module name="MagicNumber">
            <property name="ignoreNumbers" value="-1,0,1,2"/>
            <property name="ignoreHashCodeMethod" value="true"/>
            <property name="ignoreAnnotation" value="true"/>
        </module>

    </module>

    <!-- Line Length: max 80 characters -->
    <module name="LineLength">
        <property name="max" value="80"/>
        <property name="ignorePattern" value="^package.*|^import.*|a href|href|http(s)?://.*"/>
    </module>

</module>
